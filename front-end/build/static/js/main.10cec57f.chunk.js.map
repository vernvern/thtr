{"version":3,"sources":["Images/logo.svg","serviceWorker.js","Views/Register.js","Views/Home.js","Views/Nav.js","Views/App.js","Components/client.js","Views/Login.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Register","Component","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","htmlFor","type","placeholder","id","Nav","navBrandList","Link","to","map","object","i","navRightList","name","App","Views_Nav","es_Route","exact","path","component","render","props","localStorage","getItem","Redirect","client","ApolloClient","uri","Login","_this","call","access_token","state","account","password","isLogin","code","accountChange","bind","assertThisInitialized","passwordChange","login","event","setState","target","_this2","query","gql","_templateObject","input","email","variables","then","ret","data","setItem","catch","error","console","es_Redirect","msg","src","logo","alt","style","textAlign","onChange","onClick","color","textDecorationColor","textDecorationLine","textDecorationStyle","supportsHistory","history","ReactDOM","BrowserRouter","forceRefresh","Switch","Route","Views_Login","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10cec57f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport class Register extends Component {\n  render() {\n    return (\n      <div className='row flex-center'>\n        <div className='sm-10 col'>\n          <h3> 注册～ </h3>\n          <div className=\"form-group\">\n              <label htmlFor=\"nickName\">昵称</label>\n              <input type=\"text\" placeholder=\"balabala~\" id=\"nickName\" />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"account\">邮箱(账号)</label>\n              <input type=\"text\" placeholder=\"*****@**.com\" id=\"account\" />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"password\">密码</label>\n              <input type=\"text\" placeholder=\"🙈\" id=\"password\" />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"password2\">再次密码</label>\n              <input type=\"text\" placeholder=\"(✩_✩)\" id=\"password2\" />\n          </div>\n\n          <button> 注册 </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Register;\n","import React, { Component } from 'react';\n\nimport '../Css/Home.css';\n\nimport logo from '../Images/logo.svg';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <img src={logo} className=\"Home-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/Home.js</code> and save to reload.test\n          </p>\n          <a\n            className=\"Home-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        <input type=\"text\" value=\"Hello!\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Nav extends Component {\n  render() {\n\n    const navsBrand = [\n      <h4><Link to='/home'> Too Hard Too Remeber ! </Link></h4>,\n    ];\n    const navBrandList = navsBrand.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n\n    const navsRight = [\n      <Link to='/page/add'> &nbsp;+&nbsp; </Link>,\n      <Link to='/about'> 我的 </Link>\n    ];\n    const navRightList = navsRight.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n    return (\n     <nav className=\"border fixed split-nav\">\n       <div className=\"nav-brand\">\n         <ul className=\"inline\"> {navBrandList} </ul>\n       </div>\n       <div className=\"collapsible\">\n         <input id=\"collapsible2\" type=\"checkbox\" name=\"collapsible2\" />\n         <button>\n           <label htmlFor=\"collapsible2\">\n             <div className=\"bar1\"></div>\n             <div className=\"bar2\"></div>\n             <div className=\"bar3\"></div>\n           </label>\n         </button>\n         <div className=\"collapsible-body\">\n           <ul className=\"inline\"> {navRightList} </ul>\n         </div>\n       </div>\n     </nav>\n    );\n  }\n}\n\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router';\n\nimport Home from './Home';\nimport Register from './Register';\nimport Nav from './Nav';\n\nimport '../Css/index.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"row site\">\n        <div className='sm-12 md-12 col'>\n          <div className='page'>\n\n            {/* nav */}\n            <div className='row'> <Nav /> </div>\n            <div className='row'> <br /> </div>\n\n            <div className='Main row'>\n              <div className='md-10 col'></div>\n\n              <div className='md-10 col'>\n                {/* body */}\n                <Route exact path='/register' component={Register} />\n                <Route exact path='/home'  render={(props)=>{\n                  var access_token = localStorage.getItem('access_token');\n                  if (access_token){\n                    return <App />;\n                  } else {\n                    return <Redirect to='/login' />;\n                  }\n                }}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ApolloClient from 'apollo-boost';\n\n\nconst client = new ApolloClient({\n  uri: 'http://192.168.56.235/graphql/graphiql'\n});\n\nexport default client;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport gql from 'graphql-tag';\n\nimport client from '../Components/client';\n\nimport logo from '../Images/logo.svg';\n\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    const access_token = localStorage.getItem('access_token');\n    this.state = {\n      account: '',\n      password: '',\n      isLogin: access_token ? true : false,\n      code: '0'\n    };\n\n    this.accountChange = this.accountChange.bind(this);\n    this.passwordChange = this.passwordChange.bind(this);\n    this.login = this.login.bind(this);\n\n  }\n\n  accountChange(event){\n    this.setState({account: event.target.value});\n  }\n\n  passwordChange(event){\n    this.setState({password: event.target.value});\n  }\n\n  // return code:\n  // - 2001: didn`t input account\n  // - 2002: didn`t input password\n  // - 2003: network failed\n  // - 1002: account did`t exist\n  // - 1003: wrong password\n  login() {\n    var code = this.state.code;\n    if (!this.state.account){\n      this.setState({code: '2001'});\n    } else if (!this.state.password){\n      this.setState({code: '2002'});\n    } else {\n      const query = gql`\n        query dsa($email: String, $password: String){\n          login(email: $email, password: $password){\n            accessToken,\n            code,\n            msg\n          }\n        }\n      `;\n      const input = {\n        \"email\": this.state.account,\n        \"password\": this.state.password\n      };\n      // async...\n      client\n        .query({query: query, variables: input})\n        .then(ret => {\n          // request success\n          code = ret.data.login.code;\n          var isLogin = code === '0';\n          if (isLogin) {\n            localStorage.setItem('access_token', ret.data.login.access_token);\n          }\n          this.setState({code: code, isLogin: isLogin});\n        })\n        .catch(error => {\n          // request fail\n          console.error(error);\n          this.setState({code: '2003'});\n        });\n    }\n  }\n\n  render() {\n    if (this.state.isLogin) {\n      return <Redirect to='/home' />\n    }\n\n    let msg = '';\n    switch (this.state.code){\n      case '2001': msg = '请输入账号'; break;\n      case '2002': msg = '请输入密码'; break;\n      case '2003': msg = '网络错误，请稍后再试'; break;\n      case '1002': msg = '账号不存在'; break;\n      case '1003': msg = '密码错误'; break;\n      default: msg = '';\n    }\n\n    return (\n\n      <div id='login'>\n\n        <div className=\"row flex-center\">\n          <div className=''>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <img src={logo}  alt=\"logo\" />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <p style={{ textAlign: 'center' }}> Sign in to thtr </p>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 md-12 col padding-left-large\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"account\">账号</label>\n                    <input type=\"text\" className='border border-primary' placeholder=\"邮箱 | 账号\" id=\"account\" value={this.state.account} onChange={this.accountChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">密码</label>\n                    <input type=\"text\" className='border border-primary' placeholder=\"🙈\" id=\"password\" value={this.state.password} onChange={this.passwordChange}/>\n                </div>\n\n                <button type='submit' className='btn-block' onClick={this.login}> 登录 </button>\n                <p className=\"text-danger\">{msg}</p>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 col padding-smal\">\n                <p>没有thtr账号？<Link to='/register' style={{ color: '#0066CC', textDecorationColor:'#ffffff',textDecorationLine: \"underline\",textDecorationStyle: \"solid\" }}>注册一个</Link></p>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\nexport default Login;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './Views/App';\nimport Login from './Views/Login';\n\n\nconst supportsHistory = 'pushState' in window.history;\n\n\nReactDOM.render(\n  <BrowserRouter forceRefresh={!supportsHistory}>\n    <Switch>\n      <Route path='/login' render={(props)=>{\n        return <Login />;\n      }}/>\n      <Route path='/' component={App} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}