{"version":3,"sources":["Views/Register.js","serviceWorker.js","Views/Home.js","Views/Nav.js","Views/AddWord.js","Views/App.js","Views/Login.js","config.js","Components/client.js","index.js","Images/logo.svg"],"names":["REGISTER_MUTATION","gql","_templateObject","Register","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nickName","email","password1","password2","code","nickNameChange","bind","assertThisInitialized","emailChange","password1Change","password2Change","descriptionChange","setCode","inherits","createClass","key","value","event","setState","target","description","_this2","react_default","a","createElement","Redirect","to","msg","react_apollo_browser_umd","mutation","onCompleted","data","registerUser","register","_ref","onSubmit","e","preventDefault","input_data","password","variables","className","htmlFor","type","placeholder","id","onChange","Component","Boolean","window","location","hostname","match","Home","src","logo","alt","href","rel","Nav","navBrandList","Link","map","object","i","navRightList","name","MUTATION_ADD_WORD","AddWord_templateObject","AddWord","word","title","content","wordChange","titleChange","contentChange","localStorage","removeItem","addWord","access_token","getItem","react_markdown_default","source","App","Views_Nav","Route","exact","path","component","LOGIN_QUERY","Login_templateObject","Login","passwordChange","style","textAlign","client","onClick","asyncToGenerator","regenerator_default","mark","_callee","_ref2","wrap","_context","prev","next","query","sent","login","setItem","accessToken","stop","color","textDecorationColor","textDecorationLine","textDecorationStyle","Config","graphql_uri","ApolloClient","uri","supportsHistory","history","ReactDOM","render","BrowserRouter","forceRefresh","Switch","Views_Login","Views_Register","Views_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"wmBAMA,IAAMA,EAAoBC,IAAHC,KA8IRC,EAlIf,SAAAC,GACE,SAAAD,EAAYE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAChBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXC,KAAM,IAGRZ,EAAKa,eAAiBb,EAAKa,eAAeC,KAApBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACtBA,EAAKgB,YAAchB,EAAKgB,YAAYF,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACnBA,EAAKiB,gBAAkBjB,EAAKiB,gBAAgBH,KAArBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACvBA,EAAKkB,gBAAkBlB,EAAKkB,gBAAgBJ,KAArBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACvBA,EAAKmB,kBAAoBnB,EAAKmB,kBAAkBL,KAAvBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACzBA,EAAKoB,QAAUpB,EAAKoB,QAAQN,KAAbb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAhBCA,EADpB,OAAAC,OAAAoB,EAAA,EAAApB,CAAAJ,EAAAC,GAAAG,OAAAqB,EAAA,EAAArB,CAAAJ,EAAA,EAAA0B,IAAA,iBAAAC,MAAA,SAoBiBC,GACbtB,KAAKuB,SAAS,CAAClB,SAAUiB,EAAME,OAAOH,UArB1C,CAAAD,IAAA,cAAAC,MAAA,SAwBcC,GACVtB,KAAKuB,SAAS,CAACjB,MAAOgB,EAAME,OAAOH,UAzBvC,CAAAD,IAAA,kBAAAC,MAAA,SA4BkBC,GACdtB,KAAKuB,SAAS,CAAChB,UAAWe,EAAME,OAAOH,UA7B3C,CAAAD,IAAA,kBAAAC,MAAA,SAgCkBC,GACdtB,KAAKuB,SAAS,CAACf,UAAWc,EAAME,OAAOH,UAjC3C,CAAAD,IAAA,oBAAAC,MAAA,SAoCoBC,GAChBtB,KAAKuB,SAAS,CAACE,YAAaH,EAAME,OAAOH,UArC7C,CAAAD,IAAA,UAAAC,MAAA,SAwCUZ,GACNT,KAAKuB,SAAS,CAACd,KAAMA,MAzCzB,CAAAW,IAAA,SAAAC,MAAA,WA4CW,IAAAK,EAAA1B,KACP,GAAwB,MAApBA,KAAKI,MAAMK,KACb,OAAOkB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAGtB,IAAIC,EAAM,GACV,OAAQhC,KAAKI,MAAMK,MACjB,IAAK,OAAQuB,EAAM,6CAAW,MAC9B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,IAAK,OAAQA,EAAM,6CAAW,MAC9B,IAAK,OAAQA,EAAM,2BAAQ,MAC3B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,QAASA,EAAM,GAGjB,OACEL,EAAAC,EAAAC,cAACI,EAAA,SAAD,CACEC,SAAa3C,EACb4C,YAAe,SAACC,GACdV,EAAKT,QAAQmB,EAAKC,aAAa5B,QAGhC,SAAC6B,EAADC,KAAYH,KAAZ,OACCT,EAAAC,EAAAC,cAAA,QACEW,SAAY,SAAAC,GAEV,GADAA,EAAEC,iBACGhB,EAAKtB,MAAMC,SAET,GAAKqB,EAAKtB,MAAME,MAEhB,GAAKoB,EAAKtB,MAAMG,UAEhB,GAAKmB,EAAKtB,MAAMI,UAEhB,GAAIkB,EAAKtB,MAAMG,YAAcmB,EAAKtB,MAAMI,UAC7CkB,EAAKH,SAAS,CAACd,KAAM,cAChB,GAAKiB,EAAKtB,MAAMqB,YAEhB,CACL,IAAMkB,EAAa,CACjBrC,MAASoB,EAAKtB,MAAME,MACpBsC,SAAYlB,EAAKtB,MAAMG,UACvBF,SAAYqB,EAAKtB,MAAMC,SACvBoB,YAAeC,EAAKtB,MAAMqB,aAE5Ba,EAAS,CAACO,UAAWF,SARrBjB,EAAKH,SAAS,CAACd,KAAM,cAJrBiB,EAAKH,SAAS,CAACd,KAAM,cAFrBiB,EAAKH,SAAS,CAACd,KAAM,cAFrBiB,EAAKH,SAAS,CAACd,KAAM,cAFrBiB,EAAKH,SAAS,CAACd,KAAM,WAsBzBkB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,mBACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACbnB,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,YAAf,gBACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOC,YAAY,YAAYC,GAAG,WAAW7B,MAAOK,EAAKtB,MAAMC,SAAU8C,SAAUzB,EAAKhB,kBAExGiB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,SAAf,8BACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOC,YAAY,eAAeC,GAAG,QAAQ7B,MAAOK,EAAKtB,MAAME,MAAO6C,SAAUzB,EAAKb,eAErGc,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,aAAf,gBACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,WAAWC,YAAY,eAAKC,GAAG,YAAY7B,MAAOK,EAAKtB,MAAMG,UAAW4C,SAAUzB,EAAKZ,mBAEvGa,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,aAAf,4BACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,WAAWC,YAAY,kBAAQC,GAAG,YAAY7B,MAAOK,EAAKtB,MAAMI,UAAW2C,SAAUzB,EAAKX,mBAE1GY,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACbnB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,YAAUoB,YAAY,gBAAM5B,MAAOK,EAAKtB,MAAMqB,YAAa0B,SAAUzB,EAAKV,qBAE5EW,EAAAC,EAAAC,cAAA,UAAQmB,KAAK,UAAb,gBACArB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,eAAed,YAvH5CtC,EAAA,CAA8B0D,aCRVC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sFCcSC,mLArBX,OACE/B,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACbnB,EAAAC,EAAAC,cAAA,UAAQiB,UAAU,eAChBnB,EAAAC,EAAAC,cAAA,OAAK8B,IAAKC,IAAMd,UAAU,YAAYe,IAAI,SAC1ClC,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,2BADP,4BAGAF,EAAAC,EAAAC,cAAA,KACEiB,UAAU,YACVgB,KAAK,sBACLtC,OAAO,SACPuC,IAAI,uBAJN,wBATSX,sBCsCJY,mLAtCX,IAGMC,EAHY,CAChBtC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMnC,GAAG,SAAT,8BAEyBoC,IAAI,SAASC,EAAQC,GAClD,OAAO1C,EAAAC,EAAAC,cAAA,MAAIT,IAAKiD,GAAID,KAOhBE,EAJY,CAChB3C,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMnC,GAAG,aAAT,eACAJ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMnC,GAAG,UAAT,mBAE6BoC,IAAI,SAASC,EAAQC,GAClD,OAAO1C,EAAAC,EAAAC,cAAA,MAAIT,IAAKiD,GAAID,KAEtB,OACCzC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,0BACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACbnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,UAAd,IAAyBmB,EAAzB,MAEFtC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,eACbnB,EAAAC,EAAAC,cAAA,SAAOqB,GAAG,eAAeF,KAAK,WAAWuB,KAAK,iBAC9C5C,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,gBACbpB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACfnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACfnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,WAGnBnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,oBACbnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,UAAd,IAAyBwB,EAAzB,eAhCOlB,gUCGlB,IAAMoB,EAAoBhF,IAAHiF,KA4GRC,cAjGb,SAAAA,EAAY9E,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IAChB7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXuE,KAAM,GACNC,MAAO,GACPC,QAAS,IAEXhF,EAAKiF,WAAajF,EAAKiF,WAAWnE,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAClBA,EAAKkF,YAAclF,EAAKkF,YAAYpE,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACnBA,EAAKmF,cAAgBnF,EAAKmF,cAAcrE,KAAnBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAVLA,0EAaPyB,GACTtB,KAAKuB,SAAS,CAACoD,KAAMrD,EAAME,OAAOH,4CAGxBC,GACVtB,KAAKuB,SAAS,CAACqD,MAAOtD,EAAME,OAAOH,8CAGvBC,GACZtB,KAAKuB,SAAS,CAACsD,QAASvD,EAAME,OAAOH,yCAG9B,IAAAK,EAAA1B,KAEP,GAAwB,MAApBA,KAAKI,MAAMK,KACb,OAAOkB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,UACf,GAAwB,SAApB/B,KAAKI,MAAMK,KAEpB,OADAwE,aAAaC,WAAW,gBACjBvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAGtB,IAAIC,EAAM,GACV,OAAQhC,KAAKI,MAAMK,MACjB,IAAK,OAAQuB,EAAM,iCAAS,MAC5B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,QAASA,EAAM,GAGjB,OACEL,EAAAC,EAAAC,cAACI,EAAA,SAAD,CACEC,SAAasC,EACbrC,YAAe,SAACC,GACdV,EAAKH,SAAS,CAACd,KAAM2B,EAAK+C,QAAQ1E,SAGnC,SAAC0E,EAAD5C,KAAWH,KAAX,OACCT,EAAAC,EAAAC,cAAA,QACEW,SAAY,SAAAC,GAEV,GADAA,EAAEC,iBACGhB,EAAKtB,MAAMuE,KAET,GAAKjD,EAAKtB,MAAMwE,MAEhB,GAAKlD,EAAKtB,MAAMyE,QAEhB,CACL,IAAMlC,EAAa,CACjBiC,MAASlD,EAAKtB,MAAMwE,MACpBD,KAAQjD,EAAKtB,MAAMuE,KACnBE,QAAWnD,EAAKtB,MAAMyE,QACtBO,aAAgBH,aAAaI,QAAQ,iBAEvCF,EAAQ,CAACtC,UAAWF,SARpBjB,EAAKH,SAAS,CAACd,KAAM,cAFrBiB,EAAKH,SAAS,CAACd,KAAM,cAFrBiB,EAAKH,SAAS,CAACd,KAAM,WAgBzBkB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,mBACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACbnB,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,QAAf,gBACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOC,YAAY,GAAGC,GAAG,OAAO7B,MAAOK,EAAKtB,MAAMuE,KAAMxB,SAAUzB,EAAKoD,cAEvFnD,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,SAAf,gBACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOC,YAAY,GAAGC,GAAG,QAAQ7B,MAAOK,EAAKtB,MAAMwE,MAAOzB,SAAUzB,EAAKqD,eAEzFpD,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACbnB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,YAAUoB,YAAY,GAAG5B,MAAOK,EAAKtB,MAAMyE,QAAS1B,SAAUzB,EAAKsD,iBAErErD,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CAAe2D,OAAS,KAAO7D,EAAKtB,MAAMwE,MAAQ,KAAQlD,EAAKtB,MAAMyE,UACrElD,EAAAC,EAAAC,cAAA,UAAQmB,KAAK,UAAb,gBACArB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,eAAed,eAxFtBoB,aCoBPoC,2LAzBX,OACE7D,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,YACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,mBACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QAGbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OAAf,IAAsBnB,EAAAC,EAAAC,cAAC4D,EAAD,MAAtB,KAEA9D,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,YACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cAEfnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aAEbnB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnC,IACjC/B,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWnC,IACrC/B,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWnB,gBAjBvCtB,uQCDlB,IAAM0C,EAActG,IAAHuG,KAyHFC,cA7Gb,SAAAA,EAAYpG,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,IAChBnG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkG,GAAA7F,KAAAH,KAAMJ,KAoBRqB,QAAU,SAACR,GAAD,OAAUZ,EAAK0B,SAAS,iBAAO,CAACd,WAnBxCZ,EAAKO,MAAQ,CACXE,MAAO,GACPsC,SAAU,GACVnC,KAAM,IAGRZ,EAAKgB,YAAchB,EAAKgB,YAAYF,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACnBA,EAAKoG,eAAiBpG,EAAKoG,eAAetF,KAApBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACtBA,EAAKoB,QAAUpB,EAAKoB,QAAQN,KAAbb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAVCA,2EAaNyB,GACVtB,KAAKuB,SAAS,CAACjB,MAAOgB,EAAME,OAAOH,+CAGtBC,GACbtB,KAAKuB,SAAS,CAACqB,SAAUtB,EAAME,OAAOH,yCAK/B,IAAAK,EAAA1B,KACP,GAAwB,MAApBA,KAAKI,MAAMK,KACb,OAAOkB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,UAEtB,IAAIC,EAAM,GACV,OAAQhC,KAAKI,MAAMK,MACjB,IAAK,OAAQuB,EAAM,iCAAS,MAC5B,IAAK,OAAQA,EAAM,2BAAQ,MAC3B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,IAAK,OAAQA,EAAM,iCAAS,MAC5B,QAASA,EAAM,GAGjB,OACEL,EAAAC,EAAAC,cAAA,OAAKqB,GAAG,SACNvB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,mBACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,IAEbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACbnB,EAAAC,EAAAC,cAAA,OAAK8B,IAAKC,IAAOC,IAAI,WAIzBlC,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACbnB,EAAAC,EAAAC,cAAA,KAAGqE,MAAO,CAAEC,UAAW,WAAvB,uBAIJxE,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gCACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,sCACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,SAAf,gBACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOF,UAAU,wBAAwBG,YAAY,8BAAUC,GAAG,QAAQ7B,MAAOrB,KAAKI,MAAME,MAAO6C,SAAUnD,KAAKa,eAElIc,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACXnB,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,YAAf,gBACApB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOF,UAAU,wBAAwBG,YAAY,eAAKC,GAAG,WAAW7B,MAAOrB,KAAKI,MAAMwC,SAAUO,SAAUnD,KAAKiG,kBAGnItE,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACbnB,EAAAC,EAAAC,cAACI,EAAA,eAAD,KACG,SAAAmE,GAAM,OACLzE,EAAAC,EAAAC,cAAA,UAAQmB,KAAK,SAASF,UAAU,YAC9BuD,QAAOvG,OAAAwG,EAAA,EAAAxG,CAAAyG,EAAA3E,EAAA4E,KAAE,SAAAC,IAAA,IAAAC,EAAAtE,EAAA,OAAAmE,EAAA3E,EAAA+E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFpF,EAAKtB,MAAME,MADT,CAAAsG,EAAAE,KAAA,QAELpF,EAAKT,QAAQ,QAFR2F,EAAAE,KAAA,mBAGKpF,EAAKtB,MAAMwC,SAHhB,CAAAgE,EAAAE,KAAA,QAILpF,EAAKT,QAAQ,QAJR2F,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAMkBV,EAAOW,MAAM,CAClCA,MAAOjB,EACPjD,UAAW,CAACvC,MAASoB,EAAKtB,MAAME,MAAOsC,SAAYlB,EAAKtB,MAAMwC,YAR3D,QAAA8D,EAAAE,EAAAI,KAUmB,OAJhB5E,EANHsE,EAMGtE,MAIC6E,MAAMxG,MACbwE,aAAaiC,QAAQ,eAAgB9E,EAAK6E,MAAME,aAElDzF,EAAKT,QAAQmB,EAAK6E,MAAMxG,MAbnB,yBAAAmG,EAAAQ,SAAAX,EAAAzG,UADX,kBAuBJ2B,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,eAAed,MAKlCL,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gCACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,0BACbnB,EAAAC,EAAAC,cAAA,8CAAYF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMnC,GAAG,YAAYmE,MAAO,CAAEmB,MAAO,UAAWC,oBAAoB,UAAUC,mBAAoB,YAAYC,oBAAqB,UAAnI,yCAlGRpE,aCZLqE,EALA,CACbC,YAAe,iCCKFtB,EAJA,UAAIuB,GAAa,CAC9BC,IAAKH,EAAOC,cCORG,EAAkB,cAAevE,OAAOwE,QAwC9CC,IAASC,OACPrG,EAAAC,EAAAC,cAtCsB,kBACtBF,EAAAC,EAAAC,cAACI,EAAA,eAAD,CAAgBmE,OAAQA,GACtBzE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAeC,cAAeL,GAC5BlG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KAEExG,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOE,KAAK,SAASoC,OAAQ,SAACpI,GAE5B,OADmBqF,aAAaI,QAAQ,gBAE/B1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,MAEbJ,EAAAC,EAAAC,cAACuG,EAAD,SAIXzG,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYoC,OAAQ,SAACpI,GAErC,OADmBqF,aAAaI,QAAQ,gBAE/B1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,MAEbJ,EAAAC,EAAAC,cAACwG,EAAD,SAIX1G,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOE,KAAK,IAAIoC,OAAQ,SAACpI,GAEvB,OADmBqF,aAAaI,QAAQ,gBAE/B1D,EAAAC,EAAAC,cAACyG,EAAD,MAEA3G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,kBAU9B,MACAwG,SAASC,eAAe,SRkEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCS3HnBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.419da4d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Mutation } from \"react-apollo\";\nimport gql from 'graphql-tag';\n\n\nconst REGISTER_MUTATION = gql`\n  mutation register($nickName: String, $email: String, $password: String, $description: String){\n    registerUser(email:$email, password: $password, nickName: $nickName, description: $description){\n      user{\n        email\n      }\n      code,\n      msg\n    }\n  }\n`;\n\nexport class Register extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      nickName: '',\n      email: '',\n      password1: '',\n      password2: '',\n      code: ''\n    };\n\n    this.nickNameChange = this.nickNameChange.bind(this);\n    this.emailChange = this.emailChange.bind(this);\n    this.password1Change = this.password1Change.bind(this);\n    this.password2Change = this.password2Change.bind(this);\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.setCode = this.setCode.bind(this);\n  }\n\n  nickNameChange(event){\n    this.setState({nickName: event.target.value});\n  }\n\n  emailChange(event){\n    this.setState({email: event.target.value});\n  }\n\n  password1Change(event){\n    this.setState({password1: event.target.value});\n  }\n\n  password2Change(event){\n    this.setState({password2: event.target.value});\n  }\n\n  descriptionChange(event){\n    this.setState({description: event.target.value});\n  }\n\n  setCode(code){\n    this.setState({code: code});\n  }\n\n  render() {\n    if (this.state.code === '0') {\n      return <Redirect to='/login' />\n    }\n\n    let msg = '';\n    switch (this.state.code){\n      case '2001': msg = '两个密码不一致'; break;\n      case '2002': msg = '请填写昵称'; break;\n      case '2003': msg = '请填写邮箱'; break;\n      case '2004': msg = '请填写密码'; break;\n      case '2005': msg = '请再次填写密码'; break;\n      case '2006': msg = '网络错误'; break;\n      case '1001': msg = '账号已存在'; break;\n      default: msg = '';\n    }\n\n    return (\n      <Mutation\n        mutation = { REGISTER_MUTATION }\n        onCompleted = {(data) => {\n          this.setCode(data.registerUser.code);\n        }}\n      >\n        {(register, {data}) => (\n          <form\n            onSubmit = {e => {\n              e.preventDefault();\n              if (!this.state.nickName){\n                this.setState({code: '2002'});\n              } else if (!this.state.email){\n                this.setState({code: '2003'});\n              } else if (!this.state.password1){\n                this.setState({code: '2004'});\n              } else if (!this.state.password2){\n                this.setState({code: '2005'});\n              } else if (this.state.password1 !== this.state.password2){\n                this.setState({code: '2001'});\n              } else if (!this.state.description){\n                this.setState({code: '2006'});\n              } else {\n                const input_data = {\n                  'email': this.state.email,\n                  'password': this.state.password1,\n                  'nickName': this.state.nickName,\n                  'description': this.state.description\n                };\n                register({variables: input_data});\n              }\n            }}\n          >\n            <div className='row flex-center'>\n              <div className='sm-10 col'>\n                <h3> 注册～ </h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"nickName\">昵称</label>\n                    <input type=\"text\" placeholder=\"balabala~\" id=\"nickName\" value={this.state.nickName} onChange={this.nickNameChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">邮箱(账号)</label>\n                    <input type=\"text\" placeholder=\"*****@**.com\" id=\"email\" value={this.state.email} onChange={this.emailChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password1\">密码</label>\n                    <input type=\"password\" placeholder=\"🙈\" id=\"password1\" value={this.state.password1} onChange={this.password1Change} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password2\">再次密码</label>\n                    <input type=\"password\" placeholder=\"(✩_✩)\" id=\"password2\" value={this.state.password2} onChange={this.password2Change} />\n                </div>\n                <div className=\"form-group\">\n                  <label>签名</label>\n                  <textarea placeholder=\"必填!\" value={this.state.description} onChange={this.descriptionChange}></textarea>\n                </div>\n                <button type='submit'>注册</button>\n                <p className=\"text-danger\">{msg}</p>\n              </div>\n            </div>\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\n\nexport default Register;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nimport '../Css/Home.css';\n\nimport logo from '../Images/logo.svg';\n\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <img src={logo} className=\"Home-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/Home.js</code> and save to reload.test\n          </p>\n          <a\n            className=\"Home-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Nav extends Component {\n  render() {\n\n    const navsBrand = [\n      <h4><Link to='/home'> Too Hard Too Remeber ! </Link></h4>,\n    ];\n    const navBrandList = navsBrand.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n\n    const navsRight = [\n      <Link to='/page/add'> &nbsp;+&nbsp; </Link>,\n      <Link to='/about'> 我的 </Link>\n    ];\n    const navRightList = navsRight.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n    return (\n     <nav className=\"border fixed split-nav\">\n       <div className=\"nav-brand\">\n         <ul className=\"inline\"> {navBrandList} </ul>\n       </div>\n       <div className=\"collapsible\">\n         <input id=\"collapsible2\" type=\"checkbox\" name=\"collapsible2\" />\n         <button>\n           <label htmlFor=\"collapsible2\">\n             <div className=\"bar1\"></div>\n             <div className=\"bar2\"></div>\n             <div className=\"bar3\"></div>\n           </label>\n         </button>\n         <div className=\"collapsible-body\">\n           <ul className=\"inline\"> {navRightList} </ul>\n         </div>\n       </div>\n     </nav>\n    );\n  }\n}\n\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Mutation } from \"react-apollo\";\nimport ReactMarkdown from \"react-markdown\";\nimport gql from 'graphql-tag';\n\n\nconst MUTATION_ADD_WORD = gql`\n  mutation add_word($word: String, $title: String, $content: String, $access_token: String) {\n    addWord(title:$title, word: $word, content: $content, accessToken: $access_token){\n      code,\n      msg\n    }\n  }\n`;\n\n\nclass AddWord extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      word: '',\n      title: '',\n      content: '',\n    };\n    this.wordChange = this.wordChange.bind(this);\n    this.titleChange = this.titleChange.bind(this);\n    this.contentChange = this.contentChange.bind(this);\n  }\n\n  wordChange(event){\n    this.setState({word: event.target.value});\n  }\n\n  titleChange(event){\n    this.setState({title: event.target.value});\n  }\n\n  contentChange(event){\n    this.setState({content: event.target.value});\n  }\n\n  render() {\n\n    if (this.state.code === '0') {\n      return <Redirect to='/home' />;\n    } else if (this.state.code === '1004') {\n      localStorage.removeItem('access_token');\n      return <Redirect to='/login' />;\n    }\n\n    let msg = '';\n    switch (this.state.code){\n      case '2001': msg = '请填写单词'; break;\n      case '2002': msg = '请填写标题'; break;\n      case '2003': msg = '请填写内容'; break;\n      default: msg = '';\n    }\n\n    return (\n      <Mutation\n        mutation = { MUTATION_ADD_WORD }\n        onCompleted = {(data) => {\n          this.setState({code: data.addWord.code});\n        }}\n      >\n        {(addWord, {data}) => (\n          <form\n            onSubmit = {e => {\n              e.preventDefault();\n              if (!this.state.word){\n                this.setState({code: '2001'});\n              } else if (!this.state.title){\n                this.setState({code: '2002'});\n              } else if (!this.state.content){\n                this.setState({code: '2003'});\n              } else {\n                const input_data = {\n                  'title': this.state.title,\n                  'word': this.state.word,\n                  'content': this.state.content,\n                  'access_token': localStorage.getItem('access_token')\n                };\n                addWord({variables: input_data});\n              }\n            }}\n          >\n            <div className='row flex-center'>\n              <div className='sm-10 col'>\n                <h3> 添加笔记～ </h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"word\">单词</label>\n                    <input type=\"text\" placeholder=\"\" id=\"word\" value={this.state.word} onChange={this.wordChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">标题</label>\n                    <input type=\"text\" placeholder=\"\" id=\"title\" value={this.state.title} onChange={this.titleChange} />\n                </div>\n                <div className=\"form-group\">\n                  <label>内容</label>\n                  <textarea placeholder=\"\" value={this.state.content} onChange={this.contentChange}></textarea>\n                </div>\n                <ReactMarkdown source={ '# ' + this.state.title + '\\n' +  this.state.content} />\n                <button type='submit'>保存</button>\n                <p className=\"text-danger\">{msg}</p>\n              </div>\n            </div>\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default AddWord;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Nav from './Nav';\nimport AddWord from './AddWord'\n\nimport '../Css/index.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"row site\">\n        <div className='sm-12 md-12 col'>\n          <div className='page'>\n\n            {/* nav */}\n            <div className='row'> <Nav /> </div>\n\n            <div className='Main row'>\n              <div className='md-10 col'></div>\n\n              <div className='md-10 col'>\n                {/* body */}\n                <Route exact path='/' component={Home} />\n                <Route exact path='/home' component={Home} />\n                <Route exact path='/page/add' component={AddWord} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\n\n\nimport logo from '../Images/logo.svg';\n\n\nconst LOGIN_QUERY = gql`\n  query dsa($email: String, $password: String){\n    login(email: $email, password: $password){\n      accessToken,\n      code,\n      msg\n    }\n  }\n`;\n\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      code: '',\n    };\n\n    this.emailChange = this.emailChange.bind(this);\n    this.passwordChange = this.passwordChange.bind(this);\n    this.setCode = this.setCode.bind(this);\n  }\n\n  emailChange(event){\n    this.setState({email: event.target.value});\n  }\n\n  passwordChange(event){\n    this.setState({password: event.target.value});\n  }\n\n  setCode = (code) => this.setState(() => ({code}));\n\n  render() {\n    if (this.state.code === '0') {\n      return <Redirect to='/home' />\n    }\n    let msg = '';\n    switch (this.state.code){\n      case '1002': msg = '账号不存在'; break;\n      case '1003': msg = '密码错误'; break;\n      case '2001': msg = '请填写账号'; break;\n      case '2002': msg = '请填写密码'; break;\n      default: msg = '';\n    }\n\n    return (\n      <div id='login'>\n        <div className=\"row flex-center\">\n          <div className=''>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <img src={logo}  alt=\"logo\" />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <p style={{ textAlign: 'center' }}> Sign in to thtr </p>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 md-12 col padding-left-large\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">账号</label>\n                    <input type=\"text\" className='border border-primary' placeholder=\"邮箱 | 账号\" id=\"email\" value={this.state.email} onChange={this.emailChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">密码</label>\n                    <input type=\"text\" className='border border-primary' placeholder=\"🙈\" id=\"password\" value={this.state.password} onChange={this.passwordChange}/>\n                </div>\n\n                <div className=\"form-group\">\n                  <ApolloConsumer>\n                    {client => (\n                      <button type='submit' className='btn-block'\n                        onClick={async () => {\n                          if (!this.state.email){\n                            this.setCode('2001');\n                          } else if (!this.state.password){\n                            this.setCode('2002');\n                          } else {\n                            const { data } = await client.query({\n                              query: LOGIN_QUERY,\n                              variables: {'email': this.state.email, 'password': this.state.password}\n                            });\n                            if (data.login.code === '0'){\n                              localStorage.setItem('access_token', data.login.accessToken);\n                            }\n                            this.setCode(data.login.code);\n                          }\n                        }}\n                      >\n                        登录\n                      </button>\n                    )}\n                  </ ApolloConsumer>\n\n                  <p className=\"text-danger\">{msg}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 col padding-smal\">\n                <p>没有thtr账号？<Link to='/register' style={{ color: '#0066CC', textDecorationColor:'#ffffff',textDecorationLine: \"underline\",textDecorationStyle: \"solid\" }}>注册一个</Link></p>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Login;\n\n","\n\n\nconst Config = {\n  'graphql_uri': \"http://192.168.56.235/graphql\"\n};\n\n\nexport default Config;\n","import ApolloClient from 'apollo-boost';\n\nimport Config from '../config';\n\n\nconst client = new ApolloClient({\n  uri: Config.graphql_uri\n});\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport { ApolloProvider } from \"react-apollo\";\nimport Register from './Views/Register';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './Views/App';\nimport Login from './Views/Login';\nimport client from './Components/client';\n\n\nconst supportsHistory = 'pushState' in window.history;\n\n\nconst ApolloDecorator = () => (\n  <ApolloProvider client={client}>\n    <BrowserRouter forceRefresh={!supportsHistory}>\n      <Switch>\n\n        <Route path='/login' render={(props)=>{\n          var access_token = localStorage.getItem('access_token');\n          if (access_token){\n            return <Redirect to='/' />;\n          } else {\n            return <Login />;\n          }\n        }}/>\n\n        <Route exact path='/register' render={(props)=>{\n          var access_token = localStorage.getItem('access_token');\n          if (access_token){\n            return <Redirect to='/' />;\n          } else {\n            return <Register />;\n          }\n        }}/>\n\n        <Route path='/' render={(props)=>{\n          var access_token = localStorage.getItem('access_token');\n          if (access_token){\n            return <App />;\n          } else {\n            return <Redirect to='/login' />;\n          }\n        }}/>\n      </Switch>\n    </BrowserRouter>\n  </ApolloProvider>\n);\n\n\nReactDOM.render(\n  <ApolloDecorator />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}