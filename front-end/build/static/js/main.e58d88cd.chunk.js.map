{"version":3,"sources":["Views/Register.js","serviceWorker.js","Components/logout.js","Views/Nav.js","Components/util.js","Views/AddWord.js","Views/WordList.js","config.js","Components/client.js","Views/WordDetail.js","Views/App.js","Views/Login.js","index.js","Images/logo.svg"],"names":["REGISTER_MUTATION","gql","_templateObject","Register","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nickName","email","password1","password2","code","nickNameChange","bind","assertThisInitialized","emailChange","password1Change","password2Change","descriptionChange","setCode","inherits","createClass","key","value","event","setState","target","description","_this2","react_default","a","createElement","Redirect","to","msg","react_apollo_browser_umd","mutation","onCompleted","data","registerUser","register","_ref","onSubmit","e","preventDefault","input_data","password","variables","className","htmlFor","type","placeholder","id","onChange","Component","Boolean","window","location","hostname","match","logout","localStorage","removeItem","Nav","navBrandList","Link","map","object","i","navRightList","onClick","name","GetAccessToken","expires_in","getItem","Date","parse","timestampToTime","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","MUTATION_ADD_WORD","AddWord_templateObject","AddWord","word","title","content","wordChange","titleChange","contentChange","addWord","access_token","react_markdown_default","source","WORD_LIST_QUERY","WordList_templateObject","WordListView","words","JSON","stringify","pages","total","size","index","dateModified","slice","setIndex","disabled","Array","from","length","Math","ceil","x","WordList","accessToken","kwargs","WordListViewObject","graphql","options","fetchPolicy","Config","graphql_uri","client","ApolloClient","uri","text_center","textAlign","VerticalLineStyle","height","display","verticalAlign","borderRight","EDIT_WORD_MUTAION","WordDetail_templateObject","WORD_DETAIL_QUERY","_templateObject2","WordDetail","mode","modeChange","wordId","params","word_id","query","then","isAuthor","catch","error","console","_this3","detail","edit","style","info","editWord","hidden","App","Views_Nav","Route","exact","path","component","LOGIN_QUERY","Login_templateObject","Login","passwordChange","src","logo","alt","asyncToGenerator","regenerator_default","mark","_callee","_ref2","wrap","_context","prev","next","sent","login","setItem","expiresIn","stop","color","textDecorationColor","textDecorationLine","textDecorationStyle","supportsHistory","history","ReactDOM","render","BrowserRouter","forceRefresh","Switch","Views_Login","Views_Register","Views_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e58d88cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Mutation } from \"react-apollo\";\nimport gql from 'graphql-tag';\n\n\nconst REGISTER_MUTATION = gql`\n  mutation register($nickName: String, $email: String, $password: String, $description: String){\n    registerUser(email:$email, password: $password, nickName: $nickName, description: $description){\n      user{\n        email\n      }\n      code,\n      msg\n    }\n  }\n`;\n\nexport class Register extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      nickName: '',\n      email: '',\n      password1: '',\n      password2: '',\n      code: ''\n    };\n\n    this.nickNameChange = this.nickNameChange.bind(this);\n    this.emailChange = this.emailChange.bind(this);\n    this.password1Change = this.password1Change.bind(this);\n    this.password2Change = this.password2Change.bind(this);\n    this.descriptionChange = this.descriptionChange.bind(this);\n    this.setCode = this.setCode.bind(this);\n  }\n\n  nickNameChange(event){\n    this.setState({nickName: event.target.value});\n  }\n\n  emailChange(event){\n    this.setState({email: event.target.value});\n  }\n\n  password1Change(event){\n    this.setState({password1: event.target.value});\n  }\n\n  password2Change(event){\n    this.setState({password2: event.target.value});\n  }\n\n  descriptionChange(event){\n    this.setState({description: event.target.value});\n  }\n\n  setCode(code){\n    this.setState({code: code});\n  }\n\n  render() {\n    if (this.state.code === '0') {\n      return <Redirect to='/login' />\n    }\n\n    let msg = '';\n    switch (this.state.code){\n      case '2001': msg = '两个密码不一致'; break;\n      case '2002': msg = '请填写昵称'; break;\n      case '2003': msg = '请填写邮箱'; break;\n      case '2004': msg = '请填写密码'; break;\n      case '2005': msg = '请再次填写密码'; break;\n      case '2006': msg = '网络错误'; break;\n      case '1001': msg = '账号已存在'; break;\n      default: msg = '';\n    }\n\n    return (\n      <Mutation\n        mutation = { REGISTER_MUTATION }\n        onCompleted = {(data) => {\n          this.setCode(data.registerUser.code);\n        }}\n      >\n        {(register, {data}) => (\n          <form\n            onSubmit = {e => {\n              e.preventDefault();\n              if (!this.state.nickName){\n                this.setState({code: '2002'});\n              } else if (!this.state.email){\n                this.setState({code: '2003'});\n              } else if (!this.state.password1){\n                this.setState({code: '2004'});\n              } else if (!this.state.password2){\n                this.setState({code: '2005'});\n              } else if (this.state.password1 !== this.state.password2){\n                this.setState({code: '2001'});\n              } else if (!this.state.description){\n                this.setState({code: '2006'});\n              } else {\n                const input_data = {\n                  'email': this.state.email,\n                  'password': this.state.password1,\n                  'nickName': this.state.nickName,\n                  'description': this.state.description\n                };\n                register({variables: input_data});\n              }\n            }}\n          >\n            <div className='row flex-center'>\n              <div className='sm-10 col'>\n                <h3> 注册～ </h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"nickName\">昵称</label>\n                    <input type=\"text\" placeholder=\"balabala~\" id=\"nickName\" value={this.state.nickName} onChange={this.nickNameChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">邮箱(账号)</label>\n                    <input type=\"text\" placeholder=\"*****@**.com\" id=\"email\" value={this.state.email} onChange={this.emailChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password1\">密码</label>\n                    <input type=\"password\" placeholder=\"🙈\" id=\"password1\" value={this.state.password1} onChange={this.password1Change} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password2\">再次密码</label>\n                    <input type=\"password\" placeholder=\"(✩_✩)\" id=\"password2\" value={this.state.password2} onChange={this.password2Change} />\n                </div>\n                <div className=\"form-group\">\n                  <label>签名</label>\n                  <textarea placeholder=\"必填!\" value={this.state.description} onChange={this.descriptionChange}></textarea>\n                </div>\n                <button type='submit'>注册</button>\n                <p className=\"text-danger\">{msg}</p>\n              </div>\n            </div>\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\n\nexport default Register;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nfunction logout(){\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('expires_in');\n}\n\n\nexport { logout };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { logout } from '../Components/logout';\n\n\nclass Nav extends Component {\n  render() {\n\n    const navsBrand = [\n      <h4><Link to='/home'> Too Hard Too Remeber ! </Link></h4>,\n    ];\n    const navBrandList = navsBrand.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n\n    const navsRight = [\n      <Link to='/page/add'> &nbsp;+&nbsp; </Link>,\n      <Link to='/about'> 我的 </Link>,\n      <Link to=\"/login\" onClick={() =>  logout() }>退出</Link>,\n    ];\n    const navRightList = navsRight.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n    return (\n      <nav className=\"border fixed split-nav\">\n        <div className=\"nav-brand\">\n          <ul className=\"inline\"> {navBrandList} </ul>\n        </div>\n        <div className=\"collapsible\">\n          <input id=\"collapsible2\" type=\"checkbox\" name=\"collapsible2\" />\n          <button>\n            <label htmlFor=\"collapsible2\">\n              <div className=\"bar1\"></div>\n              <div className=\"bar2\"></div>\n              <div className=\"bar3\"></div>\n            </label>\n          </button>\n          <div className=\"collapsible-body\">\n            <ul className=\"inline\">\n              { navRightList }\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\n\nexport default Nav;\n","\nimport { logout } from './logout';\n\n\nfunction GetAccessToken() {\n  const expires_in = localStorage.getItem('expires_in');\n  const now = Date.parse( new Date()) / 1000;\n  if (now > expires_in){\n    logout();\n    return null;\n  } else {\n    return localStorage.getItem('access_token');\n  }\n}\n\nfunction timestampToTime(timestamp) {\n        const date = new Date(timestamp * 1000); //13位时间戳\n        const Y = date.getFullYear() + '-';\n        const M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\n        const D = date.getDate() + ' ';\n        const h = date.getHours() + ':';\n        const m = date.getMinutes() + ':';\n        const s = date.getSeconds();\n        return Y+M+D+h+m+s;\n}\n\n\nexport { GetAccessToken, timestampToTime };\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Mutation } from \"react-apollo\";\nimport ReactMarkdown from \"react-markdown\";\nimport gql from 'graphql-tag';\n\nimport { GetAccessToken } from '../Components/util';\n\n\nconst MUTATION_ADD_WORD = gql`\n  mutation add_word($word: String, $title: String, $content: String, $access_token: String) {\n    addWord(title:$title, word: $word, content: $content, accessToken: $access_token){\n      code,\n      msg\n    }\n  }\n`;\n\n\nclass AddWord extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      word: '',\n      title: '',\n      content: '',\n    };\n    this.wordChange = this.wordChange.bind(this);\n    this.titleChange = this.titleChange.bind(this);\n    this.contentChange = this.contentChange.bind(this);\n  }\n\n  wordChange(event){\n    this.setState({word: event.target.value});\n  }\n\n  titleChange(event){\n    this.setState({title: event.target.value});\n  }\n\n  contentChange(event){\n    this.setState({content: event.target.value});\n  }\n\n  render() {\n\n    if (this.state.code === '0') {\n      return <Redirect to='/home' />;\n    }\n\n    let msg = '';\n    switch (this.state.code){\n      case '2001': msg = '请填写单词'; break;\n      case '2002': msg = '请填写标题'; break;\n      case '2003': msg = '请填写内容'; break;\n      default: msg = '';\n    }\n\n    return (\n      <Mutation\n        mutation = { MUTATION_ADD_WORD }\n        onCompleted = {(data) => {\n          this.setState({code: data.addWord.code});\n        }}\n      >\n        {(addWord, {data}) => (\n          <form\n            onSubmit = {e => {\n              e.preventDefault();\n              if (!this.state.word){\n                this.setState({code: '2001'});\n              } else if (!this.state.title){\n                this.setState({code: '2002'});\n              } else if (!this.state.content){\n                this.setState({code: '2003'});\n              } else {\n                const input_data = {\n                  'title': this.state.title,\n                  'word': this.state.word,\n                  'content': this.state.content,\n                  'access_token': GetAccessToken()\n                };\n                addWord({variables: input_data});\n              }\n            }}\n          >\n            <div className='row flex-center'>\n              <div className='sm-10 col'>\n                <h3> 添加笔记～ </h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"word\">单词</label>\n                    <input type=\"text\" placeholder=\"\" id=\"word\" value={this.state.word} onChange={this.wordChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">标题</label>\n                    <input type=\"text\" placeholder=\"\" id=\"title\" value={this.state.title} onChange={this.titleChange} />\n                </div>\n                <div className=\"form-group\">\n                  <label>内容</label>\n                  <textarea placeholder=\"\" value={this.state.content} onChange={this.contentChange}></textarea>\n                </div>\n                <ReactMarkdown source={ '# ' + this.state.title + '\\n' +  this.state.content} />\n                <button type='submit'>保存</button>\n                <p className=\"text-danger\">{msg}</p>\n              </div>\n            </div>\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default AddWord;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\n\nimport { GetAccessToken, timestampToTime } from '../Components/util';\n\n\nconst WORD_LIST_QUERY = gql`\n  query word_list_query($index: Int, $size: Int, $accessToken: String){\n    words(index:$index, size:$size, accessToken: $accessToken){\n      words{\n        id,\n        word,\n        title,\n        dateModified\n      }\n      total,\n      code,\n      msg\n    }\n  }\n`;\n\nclass WordListView extends Component {\n  render(){\n    const {data: {words} } = this.props;\n    if (!words | JSON.stringify(words) === '{}') {\n      return (<div />);\n    } else {\n      const pages = words.total/this.props.size;\n      const index = this.props.index;\n      return (\n        <div>\n          <ul>\n            {words.words.map(({ id, word, title, dateModified }) => (\n              <li key={id}><Link to={'/page/detail/'+id}>\n                { word + ' ' + title + ' ' + timestampToTime(dateModified).slice(0,10) }\n              </Link></li>\n            ))}\n          </ul>\n          <div>\n            <button className=\"btn-small\" onClick={this.props.setIndex} value={this.props.index - 1} disabled={index-1<1}>{'<<'}</button>\n            {Array.from({length: Math.ceil(pages)}, (x,i) => (\n              <button className=\"btn-small\" key={i} onClick={this.props.setIndex} value={i+1}>{i+1}</button>\n            ))}\n            <button className=\"btn-small\" onClick={this.props.setIndex} value={this.props.index - 1} disabled={index+1>pages}>{'>>'}</button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\n\nclass WordList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      index: 1,\n      size: 10,\n    };\n    this.setIndex = this.setIndex.bind(this);\n  }\n\n  setIndex(event){\n    this.setState({index: event.target.value});\n  }\n\n  render() {\n    const accessToken = GetAccessToken();\n    const kwargs = {\n      \"index\": this.state.index,\n      \"size\": this.state.size,\n      \"accessToken\": accessToken\n    };\n    const WordListViewObject = graphql(WORD_LIST_QUERY, {\n      options: { variables: kwargs, fetchPolicy: 'network-only' },\n    })(WordListView);\n\n    return (\n      <WordListViewObject\n        setIndex={this.setIndex}\n        index={this.state.index}\n        size={this.state.size}\n      />\n    );\n  }\n}\n\n\nexport default WordList;\n","\n\n\nconst Config = {\n  'graphql_uri': \"http://192.168.56.235/graphql\"\n};\n\n\nexport default Config;\n","import ApolloClient from 'apollo-boost';\n\nimport Config from '../config';\n\n\nconst client = new ApolloClient({\n  uri: Config.graphql_uri\n});\n\nexport default client;\n","import React, { Component } from 'react';\nimport { Mutation } from \"react-apollo\";\nimport gql from 'graphql-tag';\nimport ReactMarkdown from \"react-markdown\";\n\nimport client from '../Components/client';\n\nimport { GetAccessToken, timestampToTime } from '../Components/util';\n\n\nconst text_center = {\n  'textAlign': 'center',\n}\n\nconst VerticalLineStyle = {\n  content: '',\n  height: '100%',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  borderRight: '1px solid black',\n}\n\nconst EDIT_WORD_MUTAION = gql`\n  mutation editWord($wordId: String, $title: String, $content: String, $access_token: String) {\n    editWord(title:$title, wordId: $wordId, content: $content, accessToken: $access_token){\n      code,\n      dateModified,\n      msg\n    }\n  }\n`;\n\n\nconst WORD_DETAIL_QUERY = gql`\n  query word_detail_query($wordId: String, $accessToken: String){\n    word(wordId: $wordId, accessToken: $accessToken){\n      title,\n      content,\n      isAuthor,\n      dateModified,\n      code\n    }\n  }\n`;\n\n\nexport default class WordDetail extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      title: '',\n      content: '',\n      mode: 'detail',\n      dateModified: 0,\n    }\n    this.titleChange = this.titleChange.bind(this);\n    this.contentChange = this.contentChange.bind(this);\n    this.modeChange = this.modeChange.bind(this);\n }\n\n  componentDidMount() {\n\n    // get word detail data\n    const kwargs = {\n      wordId: this.props.match.params.word_id,\n      accessToken: GetAccessToken()\n    }\n    client.query({query: WORD_DETAIL_QUERY, variables: kwargs})\n      .then(data => {\n        const word = data.data.word;\n        this.setState({\n          title: word.title,\n          content: word.content,\n          dateModified: timestampToTime(word.dateModified),\n          mode: word.isAuthor ? this.state.mode : 'readonly'\n        });\n      })\n      .catch(error => console.error(error));\n  }\n\n  titleChange(event){\n    this.setState({title: event.target.value});\n  }\n\n  contentChange(event){\n    this.setState({content: event.target.value});\n  }\n\n  modeChange(){\n    this.setState({mode: this.state.mode === 'detail' ? 'edit' : 'detail'})\n  }\n\n  render() {\n    const detail = (\n      <div className='row'>\n        <div className='col'>\n          <ReactMarkdown source={ '### ' + this.state.title + '\\n\\n' + this.state.content} />\n        </div>\n      </div>\n    );\n\n    const edit = (\n      <div className='row'>\n        <div className='col sm-1 col-1'>\n          <br />\n          <br />\n          <p>title:</p>\n          <br />\n          <p>content:</p>\n        </div>\n        <div className='col sm-6 col-6' style={VerticalLineStyle}>\n          <br />\n          <br />\n          <Mutation\n            mutation = { EDIT_WORD_MUTAION }\n            onCompleted = {(data) => {\n              console.info(data);\n              if (data.editWord.code === '0') {\n                this.setState({\n                  'mode': 'detail',\n                  'dateModified': timestampToTime(data.editWord.dateModified)\n                });\n              }\n            }}\n          >\n            {(editWord, {data}) => (\n              <form\n                onSubmit = { e => {\n                  e.preventDefault();\n                  if (!this.state.title) {\n                    this.setState({'code': '2001'});\n                  } else if (!this.state.content) {\n                    this.setState({'code': '2001'});\n                  } else {\n                    const input_data = {\n                      wordId: this.props.match.params.word_id,\n                      title: this.state.title,\n                      content: this.state.content,\n                      access_token: GetAccessToken()\n                    }\n                    editWord({variables: input_data});\n                  }\n                }}\n              >\n                <div className=\"form-group\">\n                  <input id='titleInput' className='input-block' type=\"text\" placeholder=\"\" value={this.state.title} onChange={this.titleChange} />\n                  <br />\n                  <textarea className='input-block' value={this.state.content} onChange={this.contentChange}/>\n                  <br />\n                  <button type='submit' className='btn-small'>保存</button>\n                </div>\n              </form>\n            )}\n          </Mutation>\n        </div>\n        <div className='col sm-5 col-5'>\n          <ReactMarkdown source={ '### ' + this.state.title + '\\n' +  this.state.content} />\n        </div>\n      </div>\n    );\n    const mode = this.state.mode;\n\n    return (\n      <div>\n        <div className=\"text-center\" style={text_center}>\n          <h2>test</h2>\n        </div>\n        <div className=\"row flex-right\">\n          <p className='text-muted'>last modified: { this.state.dateModified }</p>\n        </div>\n        <button className='btn-small' onClick={this.modeChange} hidden={mode === 'readonly'}> {mode === 'edit' ? 'detail' : 'edit'} </button>\n        {mode === 'edit' ? edit : detail}\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Nav from './Nav';\nimport AddWord from './AddWord';\nimport WordList from './WordList';\nimport WordDetail from './WordDetail';\n\nimport '../Css/index.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"row site\">\n        <div className='sm-12 md-12 col'>\n          <div className='page'>\n\n            {/* nav */}\n            <div className='row'> <Nav /> </div>\n\n            <div className='Main row'>\n              <div className='md-10 col'></div>\n\n              <div className='md-10 col'>\n                {/* body */}\n                <Route exact path='/' component={WordList} />\n                <Route exact path='/home' component={WordList} />\n                <Route exact path='/page/add' component={AddWord} />\n                <Route path='/page/detail/:word_id' component={WordDetail} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\n\n\nimport logo from '../Images/logo.svg';\n\n\nconst LOGIN_QUERY = gql`\n  query login_query($email: String, $password: String){\n    login(email: $email, password: $password){\n      accessToken,\n      expiresIn,\n      code,\n      msg\n    }\n  }\n`;\n\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      code: '',\n    };\n\n    this.emailChange = this.emailChange.bind(this);\n    this.passwordChange = this.passwordChange.bind(this);\n    this.setCode = this.setCode.bind(this);\n  }\n\n  emailChange(event){\n    this.setState({email: event.target.value});\n  }\n\n  passwordChange(event){\n    this.setState({password: event.target.value});\n  }\n\n  setCode = (code) => this.setState(() => ({code}));\n\n  render() {\n    if (this.state.code === '0') {\n      return <Redirect to='/home' />\n    }\n    let msg = '';\n    switch (this.state.code){\n      case '1002': msg = '账号不存在'; break;\n      case '1003': msg = '密码错误'; break;\n      case '2001': msg = '请填写账号'; break;\n      case '2002': msg = '请填写密码'; break;\n      default: msg = '';\n    }\n\n    return (\n      <div id='login'>\n        <div className=\"row flex-center\">\n          <div className=''>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <img src={logo}  alt=\"logo\" />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <p style={{ textAlign: 'center' }}> Sign in to thtr </p>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 md-12 col padding-left-large\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">账号</label>\n                    <input type=\"text\" className='border border-primary' placeholder=\"邮箱 | 账号\" id=\"email\" value={this.state.email} onChange={this.emailChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">密码</label>\n                    <input type=\"password\" className='border border-primary' placeholder=\"🙈\" id=\"password\" value={this.state.password} onChange={this.passwordChange}/>\n                </div>\n\n                <div className=\"form-group\">\n                  <ApolloConsumer>\n                    {client => (\n                      <button type='submit' className='btn-block'\n                        onClick={async () => {\n                          if (!this.state.email){\n                            this.setCode('2001');\n                          } else if (!this.state.password){\n                            this.setCode('2002');\n                          } else {\n                            const { data } = await client.query({\n                              query: LOGIN_QUERY,\n                              variables: {'email': this.state.email, 'password': this.state.password}\n                            });\n                            if (data.login.code === '0'){\n                              localStorage.setItem('access_token', data.login.accessToken);\n                              localStorage.setItem('expires_in', data.login.expiresIn);\n                            }\n                            this.setCode(data.login.code);\n                          }\n                        }}\n                      >\n                        登录\n                      </button>\n                    )}\n                  </ ApolloConsumer>\n\n                  <p className=\"text-danger\">{msg}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 col padding-smal\">\n                <p>没有thtr账号？<Link to='/register' style={{ color: '#0066CC', textDecorationColor:'#ffffff',textDecorationLine: \"underline\",textDecorationStyle: \"solid\" }}>注册一个</Link></p>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Login;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { ApolloProvider } from \"react-apollo\";\nimport Register from './Views/Register';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './Views/App';\nimport Login from './Views/Login';\nimport client from './Components/client';\nimport { GetAccessToken } from './Components/util';\n\n\nconst supportsHistory = 'pushState' in window.history;\n\n\nconst ApolloDecorator = () => (\n  <ApolloProvider client={client}>\n    <BrowserRouter forceRefresh={!supportsHistory}>\n      <Switch>\n\n        <Route path='/login' render={(props)=>{\n          var access_token = GetAccessToken();\n          if (access_token){\n            return <Redirect to='/' />;\n          } else {\n            return <Login />;\n          }\n        }}/>\n\n        <Route exact path='/register' render={(props)=>{\n          var access_token = GetAccessToken();\n          if (access_token){\n            return <Redirect to='/' />;\n          } else {\n            return <Register />;\n          }\n        }}/>\n\n        <Route path='/' render={(props)=>{\n          var access_token = GetAccessToken();\n          if (access_token){\n            return <App />;\n          } else {\n            return <Redirect to='/login' />;\n          }\n        }}/>\n      </Switch>\n    </BrowserRouter>\n  </ApolloProvider>\n);\n\n\nReactDOM.render(\n  <ApolloDecorator />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}