{"version":3,"sources":["Images/logo.svg","serviceWorker.js","Views/Home.js","Views/Login.js","Views/Nav.js","Views/App.js","Components/client.js","Components/auth.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Home","react_default","a","createElement","className","src","logo","alt","href","target","rel","type","value","Component","Login","id","style","textAlign","htmlFor","placeholder","this","props","account","onChange","accountChange","password","passwordChange","onClick","login","Link","to","color","textDecorationColor","textDecorationLine","textDecorationStyle","Register","_Component2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","Nav","navBrandList","map","object","i","navRightList","name","App","Views_Nav","es_Route","exact","path","component","client","ApolloClient","uri","Auth","_this","call","access_token","localStorage","getItem","state","isLogin","bind","assertThisInitialized","event","setState","test","gql","_templateObject","query","variables","email","then","data","console","log","catch","error","_this2","Route","render","Redirect","Views_Login","assign","React","supportsHistory","history","ReactDOM","BrowserRouter","forceRefresh","Switch","auth","Views_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dce1dd05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nimport '../Css/Home.css';\n\nimport logo from '../Images/logo.svg';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <header className=\"Home-header\">\n          <img src={logo} className=\"Home-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/Home.js</code> and save to reload.test\n          </p>\n          <a\n            className=\"Home-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        <input type=\"text\" value=\"Hello!\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../Images/logo.svg';\n\n\nclass Login extends Component {\n\n  render() {\n    return (\n      <div id='login'>\n\n        <div className=\"row flex-center\">\n          <div className=''>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <img src={logo}  alt=\"logo\" />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className='sm-12 col'>\n                <p style={{ textAlign: 'center' }}> Sign in to thtr </p>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 md-12 col padding-left-large\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"account\">账号</label>\n                    <input type=\"text\" placeholder=\"邮箱 | 账号\" id=\"account\" value={this.props.account} onChange={this.props.accountChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">密码</label>\n                    <input type=\"text\" placeholder=\"🙈\" id=\"password\" value={this.props.password} onChange={this.props.passwordChange}/>\n                </div>\n\n                <button type='submit' className='btn-block' onClick={this.props.login}> 登录 </button>\n              </div>\n            </div>\n\n            <div className=\"row flex-space child-borders\" >\n              <div className=\"sm-12 col padding-smal\">\n                <p>没有thtr账号？<Link to='/register' style={{ color: '#0066CC', textDecorationColor:'#ffffff',textDecorationLine: \"underline\",textDecorationStyle: \"solid\" }}>注册一个</Link></p>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\nexport class Register extends Component {\n  render() {\n    return (\n      <div className='row flex-center'>\n        <div className='sm-10 col'>\n          <h3> 注册～ </h3>\n          <div className=\"form-group\">\n              <label htmlFor=\"nickName\">昵称</label>\n              <input type=\"text\" placeholder=\"balabala~\" id=\"nickName\" />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"account\">邮箱(账号)</label>\n              <input type=\"text\" placeholder=\"*****@**.com\" id=\"account\" />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"password\">密码</label>\n              <input type=\"text\" placeholder=\"🙈\" id=\"password\" />\n          </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"password2\">再次密码</label>\n              <input type=\"text\" placeholder=\"(✩_✩)\" id=\"password2\" />\n          </div>\n\n          <button> 注册 </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Login;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Nav extends Component {\n  render() {\n\n    const navsBrand = [\n      <h4><Link to='/home'> Too Hard Too Remeber ! </Link></h4>,\n    ];\n    const navBrandList = navsBrand.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n\n    const navsRight = [\n      <Link to='/page/add'> &nbsp;+&nbsp; </Link>,\n      <Link to='/about'> 我的 </Link>\n    ];\n    const navRightList = navsRight.map(function(object, i){\n      return <li key={i}>{object}</li>\n    });\n    return (\n     <nav className=\"border fixed split-nav\">\n       <div className=\"nav-brand\">\n         <ul className=\"inline\"> {navBrandList} </ul>\n       </div>\n       <div className=\"collapsible\">\n         <input id=\"collapsible2\" type=\"checkbox\" name=\"collapsible2\" />\n         <button>\n           <label htmlFor=\"collapsible2\">\n             <div className=\"bar1\"></div>\n             <div className=\"bar2\"></div>\n             <div className=\"bar3\"></div>\n           </label>\n         </button>\n         <div className=\"collapsible-body\">\n           <ul className=\"inline\"> {navRightList} </ul>\n         </div>\n       </div>\n     </nav>\n    );\n  }\n}\n\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\nimport Home from './Home';\nimport { Register } from './Login';\nimport Nav from './Nav';\n\nimport '../Css/index.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"row site\">\n        <div className='sm-12 md-12 col'>\n          <div className='page'>\n\n            {/* nav */}\n            <div className='row'> <Nav /> </div>\n            <div className='row'> <br /> </div>\n\n            <div className='Main row'>\n              <div className='md-10 col'></div>\n\n              <div className='md-10 col'>\n                {/* body */}\n                <Route exact path='/register' component={Register} />\n                <Route exact path='/home' component={Home} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ApolloClient from 'apollo-boost';\n\n\nconst client = new ApolloClient({\n  uri: 'http://192.168.56.235/graphql/graphiql'\n});\n\nexport default client;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport gql from 'graphql-tag';\n\nimport Login from '../Views/Login';\nimport client from './client.js';\n\n\nclass Auth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.logout = this.logout.bind(this);\n    var access_token = localStorage.getItem('access_token');\n    this.state = {\n      account: '',\n      password: '',\n      isLogin: access_token ? true : false\n    };\n\n    this.accountChange = this.accountChange.bind(this);\n    this.passwordChange = this.passwordChange.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  accountChange(event){\n    this.setState({account: event.target.value});\n  }\n\n  passwordChange(event){\n    this.setState({password: event.target.value});\n  }\n\n  login(event) {\n    if (this.state.account && this.state.password){\n      const access_token = '2333';\n      const test = gql`\n        query dsa($email: String, $password: String){\n          login(email: $email, password: $password){\n            accessToken,\n            code,\n            msg\n          }\n        }\n      `;\n      const input = {\"email\": \"test\", \"password\": \"test\"};\n      client.query({query: test, variables: input})\n            .then(data => console.log(data))\n            .catch(error => console.error(error));\n      // localStorage.setItem('access_token', access_token);\n      // this.setState({isLogin: true});\n    } else {\n    }\n    return this.isLogin;\n  }\n\n  // logout(e) {\n  //   this.isLogin = false;\n  //   localStorage.removeItem('access_token');\n  //   return this.isLogin;\n  // }\n\n  render() {\n    return (\n      <Route exact path='/auth/login' render={(props)=>{\n        if (this.state.isLogin) {\n          return <Redirect to='/home' />\n        } else {\n          return <Login\n            account={this.state.account}\n            accountChange={this.accountChange}\n            password={this.state.password}\n            passwordChange={this.passwordChange}\n            login={this.login}\n            {...props}\n          />\n        }\n      }} />\n    );\n  }\n\n}\n\n\nexport default Auth;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './Views/App';\nimport Auth from './Components/auth';\nimport client from './Components/client';\n\n\nconst supportsHistory = 'pushState' in window.history;\n\n\nReactDOM.render(\n  <BrowserRouter forceRefresh={!supportsHistory}>\n    <Switch>\n      <Route path='/auth' render={(props)=>{\n        return <Auth />;\n      }}/>\n      <Route path='/' render={(props)=>{\n        var access_token = localStorage.getItem('access_token');\n        if (access_token){\n          return <App />;\n        } else {\n          return <Redirect to='/auth/login' />;\n        }\n      }}/>\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}